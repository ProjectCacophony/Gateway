image: golang:1.10

variables:
  TF_IMAGE: hashicorp/terraform:0.11.7
  TF_DIR: terraform
  DOCKER_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  DOCKER_IMAGE_PREV: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BEFORE_SHA}"

stages:
  - build
  - test
  - deploy

Docker Build:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  before_script:
    - >
      docker login
      --username "${CI_REGISTRY_USER}"
      --password "${CI_REGISTRY_PASSWORD}"
      "${CI_REGISTRY}"
  script:
  - docker pull "${DOCKER_IMAGE_PREV}" || true
  - >
    docker build
    --cache-from "${DOCKER_IMAGE_PREV}"
    --tag "${DOCKER_IMAGE}"
    "${PWD}"
  - docker push "${DOCKER_IMAGE}"

Go Tests:
  image: ${DOCKER_IMAGE}
  stage: test
  before_script:
    - cd ${GOPATH}/src/gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME} || exit
    - go get -v golang.org/x/tools/cmd/goimports
    - go get -v gopkg.in/alecthomas/gometalinter.v2
    - gometalinter.v2 --install
  script:
    - "${CI_PROJECT_DIR}/go_format.sh"
    - "${CI_PROJECT_DIR}/go_tests.sh"

Deploy!:
  image:
    name: "${TF_IMAGE}"
    entrypoint: ["/usr/bin/env"]
  stage: deploy
  before_script:
    - cd "${TF_DIR}"
    - >
      [ -z "${AWS_ACCESS_KEY_ID// }" ] &&
      export AWS_ACCESS_KEY_ID=${RO_AWS_ACCESS_KEY_ID} &&
      echo "Read-only Access Key ID loaded."
    - >
      [ -z "${AWS_SECRET_ACCESS_KEY// }" ] &&
      export AWS_SECRET_ACCESS_KEY=${RO_AWS_SECRET_ACCESS_KEY} &&
      echo "Read-only Secret Access Key loaded."
    - terraform init
  script:
    - terraform plan -out current.tfplan
    - terraform apply current.tfplan
